{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport { loadReCaptcha } from 'react-recaptcha-google';\nimport Work from './Work';\nimport About from './About';\nimport Contact from './Contact';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './ThemeStyle';\nimport { GlobalStyles } from './GlobalStyle';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: null,\n      theme: 'light'\n    };\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n\n  componentDidMount() {\n    // Call the fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n    loadReCaptcha();\n  }\n\n  switchTheme() {\n    this.state.theme === 'light' ? this.setState({\n      theme: 'dark'\n    }, console.log('dark')) : this.setState({\n      theme: 'light'\n    }, console.log('light'));\n  }\n\n  render() {\n    let selectedTheme = this.state.theme === 'light' ? lightTheme : darkTheme;\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: selectedTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"theme-switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.switchTheme,\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slider round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Work,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/contact\",\n      component: Contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.state.data)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/client/src/App.js"],"names":["React","useState","Route","HashRouter","Router","loadReCaptcha","Work","About","Contact","Header","Footer","ThemeProvider","lightTheme","darkTheme","GlobalStyles","App","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","theme","switchTheme","bind","componentDidMount","then","res","setState","express","catch","err","console","log","render","selectedTheme"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport { loadReCaptcha } from 'react-recaptcha-google';\nimport Work from './Work';\nimport About from './About';\nimport Contact from './Contact';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './ThemeStyle';\nimport { GlobalStyles } from './GlobalStyle';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      theme: 'light'\n    };\n\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n\n  componentDidMount() {\n    // Call the fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n\n    loadReCaptcha();  \n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  }\n\n  switchTheme() {\n    (this.state.theme === 'light') ?\n    this.setState({theme: 'dark'}, console.log('dark')) :\n    this.setState({theme: 'light'}, console.log('light'));\n  }\n\n\n  render() {\n\n    let selectedTheme = (this.state.theme === 'light') ? lightTheme : darkTheme\n\n    return (\n      <ThemeProvider theme={selectedTheme}>\n        <>\n          <Router>\n            <React.Fragment>\n\n              <Header />\n\n              <label className='theme-switch'>\n                <input onClick={this.switchTheme} type='checkbox'></input>\n                <span className='slider round'></span>\n              </label>\n\n              <main className='content'>\n                <Route exact path='/' component={Work} />\n                <Route path='/about' component={About} />\n                <Route path='/contact' component={Contact} />\n              </main>\n\n              <Footer />\n              <p className=\"App-intro\">{this.state.data}</p>\n            </React.Fragment>\n          </Router>\n        </>\n      </ThemeProvider>  \n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}