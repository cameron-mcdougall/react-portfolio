{"ast":null,"code":"var _jsxFileName = \"/Users/cameronmcdougall/Documents/Code/cameron-mcdougall/react-portfolio/client/src/Contact.js\";\nimport React from 'react';\nimport './Contact.css';\nimport axios from 'axios';\nimport Form from './Form';\nimport FormPreview from './FormPreview';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      email: null,\n      number: null,\n      message: null,\n      preview: false,\n      errors: {\n        name: '',\n        email: '',\n        number: '',\n        message: ''\n      }\n    };\n    this.updateInputChange = this.updateInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.togglePreview = this.togglePreview.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  updateInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'name':\n        errors.name = value.length < 3 ? 'Name must be at least 3 characters long' : '';\n        break;\n\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Not a valid email address';\n        break;\n\n      case 'number':\n        errors.number = value.length < 11 ? 'Must contain at least 11 numbers' : '';\n        break;\n\n      case 'message':\n        errors.message = value.length > 500 ? 'Too many characters, please keep your message under 500 characters' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log(errors);\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      method: 'POST',\n      url: 'http:\\//localhost:5000/send',\n      data: {\n        name: this.state.name,\n        email: this.state.email,\n        number: this.state.number,\n        message: this.state.message\n      }\n    }).then(response => {\n      if (response.data.msg === 'success') {\n        alert('Email sent, awesome!');\n        this.resetForm();\n      } else if (response.data.msg === 'fail') {\n        alert('Oops, something went wrong. Try again');\n      }\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      name: null,\n      email: null,\n      number: null,\n      message: null\n    });\n  }\n\n  togglePreview(event) {\n    this.state.preview === true ? this.setState({\n      preview: false\n    }) : this.setState({\n      preview: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"form-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form, {\n      prev: this.state,\n      handleChange: this.updateInputChange.bind(this),\n      handleSubmit: this.handleSubmit.bind(this),\n      togglePreview: this.togglePreview.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(FormPreview, {\n      prev: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/cameronmcdougall/Documents/Code/cameron-mcdougall/react-portfolio/client/src/Contact.js"],"names":["React","axios","Form","FormPreview","Contact","Component","constructor","props","state","name","email","number","message","preview","errors","updateInputChange","bind","handleSubmit","togglePreview","resetForm","event","value","target","length","validEmailRegex","test","setState","console","log","preventDefault","method","url","data","then","response","msg","alert","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Contact.css';\nimport axios from 'axios';\nimport Form from './Form';\nimport FormPreview from './FormPreview';\n\nclass Contact extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: null,\n\t\t\temail: null,\n\t\t\tnumber: null,\n\t\t\tmessage: null,\n\t\t\tpreview: false,\n\t\t\terrors: {\n\t\t\t\tname: '',\n\t\t\t\temail: '',\n\t\t\t\tnumber: '',\n\t\t\t\tmessage: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.updateInputChange = this.updateInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.togglePreview = this.togglePreview.bind(this);\n\t\tthis.resetForm = this.resetForm.bind(this);\n\n\t}\n\n\tupdateInputChange(event) {\n\n\t\tconst { name, value } = event.target;\n\t\tlet errors = this.state.errors;\n\n\t\tswitch(name) {\n\t\t\tcase 'name':\n\t\t\t\terrors.name = value.length < 3 ? 'Name must be at least 3 characters long' : '';\n\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\terrors.email = validEmailRegex.test(value) ? '' : 'Not a valid email address';\n\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\terrors.number = value.length < 11 ? 'Must contain at least 11 numbers' : '';\n\t\t\tbreak;\n\t\t\tcase 'message':\n\t\t\t\terrors.message = value.length > 500 ? 'Too many characters, please keep your message under 500 characters' : '';\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t}, () => {\n\t\t\tconsole.log(errors)\n\t\t});\n\n\t}\n\n\thandleSubmit(event) {\n\n\t\tevent.preventDefault();\n\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http:\\//localhost:5000/send',\n\t\t\tdata: {\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tnumber: this.state.number,\n\t\t\t\tmessage: this.state.message \n\t\t\t}\n\t\t}).then((response) => {\n\t\t\tif (response.data.msg === 'success') {\n\t\t\t\talert('Email sent, awesome!');\n\t\t\t\tthis.resetForm()\n\t\t\t} else if (response.data.msg === 'fail') {\n\t\t\t\talert('Oops, something went wrong. Try again')\n\t\t\t}\n\t\t})\n\t\t\n\t}\n\n\tresetForm(){\n\t\t\tthis.setState({\n\t\t\t\tname: null,\n\t\t\t\temail: null,\n\t\t\t\tnumber: null,\n\t\t\t\tmessage: null\n\t\t\t})\n\t\t}\n\n\ttogglePreview(event) {\n\n\t\t(this.state.preview === true) ? this.setState({preview: false}) : this.setState({preview: true})\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<section className='form-wrap'>\n\t\t\t\t<Form\n\t\t\t\t\tprev={this.state}\n\t\t\t\t\thandleChange={this.updateInputChange.bind(this)}\n\t\t\t\t\thandleSubmit={this.handleSubmit.bind(this)} \n\t\t\t\t\ttogglePreview={this.togglePreview.bind(this)}\n\t\t\t\t/>\n\t\t\t\t<FormPreview prev={this.state} />\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}