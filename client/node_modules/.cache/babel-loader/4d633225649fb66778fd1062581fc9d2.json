{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport { loadReCaptcha } from 'react-recaptcha-google';\nimport Work from './Work';\nimport About from './About';\nimport Contact from './Contact';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Globalstyle\";\nimport { lightTheme, darkTheme } from \"./ThemeStyle\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    // Call the fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n    loadReCaptcha();\n  }\n\n  render() {\n    const [theme, setTheme] = useState('light');\n\n    const themeToggler = () => {\n      theme === 'light' ? setTheme('dark') : setTheme('light');\n    };\n\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme === 'light' ? lightTheme : darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: themeToggler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Switch Theme\"), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Work,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/contact\",\n      component: Contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, this.state.data)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/client/src/App.js"],"names":["React","useEffect","useState","Route","HashRouter","Router","loadReCaptcha","Work","About","Contact","Header","Footer","ThemeProvider","GlobalStyles","lightTheme","darkTheme","App","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","componentDidMount","then","res","setState","express","catch","err","console","log","render","theme","setTheme","themeToggler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport { loadReCaptcha } from 'react-recaptcha-google';\nimport Work from './Work';\nimport About from './About';\nimport Contact from './Contact';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Globalstyle\";\nimport { lightTheme, darkTheme } from \"./ThemeStyle\"\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n    };\n  }\n\n  componentDidMount() {\n    // Call the fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n\n    loadReCaptcha();  \n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  }\n\n  render() {\n\n    const [theme, setTheme] = useState('light');\n    const themeToggler = () => {\n      theme === 'light' ? setTheme('dark') : setTheme('light')\n    }\n\n    return (\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n\n      <Router>\n        <React.Fragment>\n\n          <Header />\n          <button onClick={themeToggler}>Switch Theme</button>\n          <main className='content'>\n            <Route exact path='/' component={Work} />\n            <Route path='/about' component={About} />\n            <Route path='/contact' component={Contact} />\n          </main>\n\n          <Footer />\n          <p className=\"App-intro\">{this.state.data}</p>\n        </React.Fragment>\n      </Router>  \n\n      </>\n      </ThemeProvider>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}